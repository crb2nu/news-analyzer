apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: news-analyzer
  labels:
    app: news-analyzer
    component: minio
type: Opaque
stringData:
  rootUser: "news-analyzer"
  rootPassword: "changeme-strong-secret-key"
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: news-analyzer
  labels:
    app: news-analyzer
    component: minio
spec:
  clusterIP: None
  ports:
    - port: 9000
      name: api
    - port: 9001
      name: console
  selector:
    app: news-analyzer
    component: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: news-analyzer
  labels:
    app: news-analyzer
    component: minio
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: news-analyzer
      component: minio
  template:
    metadata:
      labels:
        app: news-analyzer
        component: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:latest
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: rootUser
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: rootPassword
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        volumeMounts:
        - name: data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 120
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 20
        resources:
          requests:
            memory: 512Mi
            cpu: 250m
          limits:
            memory: 2Gi
            cpu: 1000m
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: news-analyzer
  labels:
    app: news-analyzer
    component: minio
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9000
      protocol: TCP
      name: api
    - port: 9001
      targetPort: 9001
      protocol: TCP
      name: console
  selector:
    app: news-analyzer
    component: minio
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-bucket-setup
  namespace: news-analyzer
  labels:
    app: news-analyzer
    component: minio-setup
spec:
  template:
    metadata:
      labels:
        app: news-analyzer
        component: minio-setup
    spec:
      restartPolicy: Never
      containers:
      - name: mc
        image: minio/mc:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          # Wait for MinIO to be ready
          echo "Waiting for MinIO to be ready..."
          until mc alias set news-minio http://minio-service.news-analyzer.svc.cluster.local $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
            echo "Waiting for MinIO..."
            sleep 5
          done
          
          # Create bucket if it doesn't exist
          mc mb --ignore-existing news-minio/news-cache
          
          # Set bucket policy to allow read/write
          mc anonymous set download news-minio/news-cache
          
          echo "MinIO bucket setup complete!"
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: rootUser
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: rootPassword